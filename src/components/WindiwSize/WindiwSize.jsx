import { useCallback, useMemo, useState } from "react";
import bgImg from "../../assets/img/window.jpg";
import { useWindowSize } from "./useWindowSize";

import styles from "./WindowSize.module.css";

function WindowSize() {
  const [isOpenTaskVal, setIsOpenTaskVal] = useState(false);
  const [isVisibleCode, setIsVisibleCode] = useState(false);
  const { width, height } = useWindowSize();
  const valIcon = useMemo(() => {
    if (width > 1200)
      return (
        <span role="img" aria-label="monitor">
          üñ•Ô∏è
        </span>
      );
    else if (width >= 600 && width < 1200)
      return (
        <span role="img" aria-label="laptop">
          üíª
        </span>
      );
    else
      return (
        <span role="img" aria-label="phone">
          üì±
        </span>
      );
  }, [width, height]);

  return (
    <div className="sectionWrap" style={{ backgroundImage: `url(${bgImg})` }}>
      <div className="description">
        <p className="decorNum">3</p>
        <h2>
          useMemo / <br />
          .addEventListener(
          <br />
          "resize"...
        </h2>
        <div>
          <p>useWindowSize- —Ä–æ–∑–º—ñ—Ä –≤—ñ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞</p>
        </div>
        <div className="more" onClick={() => setIsOpenTaskVal((v) => !v)}>
          –ó–∞–≤–¥–∞–Ω–Ω—è
        </div>
        <div onClick={() => setIsVisibleCode((v) => !v)} className="more">
          Code
        </div>
        {isOpenTaskVal && (
          <div className="moreBody">
            <p>
              –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–∞—Å—Ç–æ–º–Ω–∏–π —Ö—É–∫ useWindowSize, —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω—É —à–∏—Ä–∏–Ω—É
              —Ç–∞ –≤–∏—Å–æ—Ç—É –≤—ñ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞.
              <br />
              –í—ñ–Ω –ø–æ–≤–∏–Ω–µ–Ω –æ–Ω–æ–≤–ª—é–≤–∞—Ç–∏—Å—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ä–æ–∑–º—ñ—Ä—É –≤—ñ–∫–Ω–∞.
              <br /> –°—Ç–≤–æ—Ä—ñ—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, —è–∫–∏–π –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø–æ—Ç–æ—á–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ –≤—ñ–∫–Ω–∞
              –±—Ä–∞—É–∑–µ—Ä–∞ (—à–∏—Ä–∏–Ω–∞ x –≤–∏—Å–æ—Ç–∞), –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ useWindowSize.
              <br /> –ù–∞ –æ—Å–Ω–æ–≤—ñ —Ä–æ–∑–º—ñ—Ä—ñ–≤ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ —ñ–∫–æ–Ω–∫–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∞, –ø–ª–∞–Ω—à–µ—Ç–∞
              –∞–±–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.
            </p>
          </div>
        )}

        {isVisibleCode && (
          <div className="moreBody">
            <p>
              export const useWindowSize = () =&gt; &#123; <br />
              const [value, setIsValue] = useState(&#123;
              <br />
              width: window.innerWidth,
              <br />
              height: window.innerHeight,
              <br />
              &#125;);
              <br />
              useEffect(() =&gt; &#123;
              <br />
              const sizeWindow = () =&gt; &#123;
              <br />
              setIsValue(&#123;
              <br />
              width: window.innerWidth,
              <br />
              height: window.innerHeight,
              <br />
              &#125;);
              <br />
              &#125;;
              <br />
              window.addEventListener("resize", sizeWindow);
              <br />
              return () =&gt; &#123;
              <br />
              window.removeEventListener("resize", sizeWindow);
              <br />
              &#125;;
              <br />
              &#125;, []);
              <br />
              return value;
              <br />
              &#125;;
              <br />
            </p>
          </div>
        )}
      </div>

      <div className="solution">
        <div>
          <h2>–ø–æ—Ç–æ—á–Ωa —à–∏—Ä–∏–Ω–∞ —Ç–∞ –≤–∏—Å–æ—Ç–∞ –≤—ñ–∫–Ω–∞ –±—Ä–∞—É–∑–µ—Ä–∞</h2>
          <p>{`–®–∏—Ä—ñ–Ω–∞: ${width} / –í—ã—Å–æ—Ç–∞ : ${height}`}</p>
          <div className={styles.iconSize}> {valIcon}</div>
        </div>
        <h2> const &#123;width, height&#125; = useWindowSize();</h2>
      </div>
    </div>
  );
}
export default WindowSize;
